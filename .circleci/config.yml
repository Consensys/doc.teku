---
version: 2.1

orbs:
  slack: circleci/slack@3.4.1

executors:
  python_executor:
    docker:
      - image: circleci/python:3.7.4
        auth:
          username: $DOCKER_USER_RO
          password: $DOCKER_PASSWORD_RO
  node_executor:
    docker:
      - image: circleci/node:lts-buster
        auth:
          username: $DOCKER_USER_RO
          password: $DOCKER_PASSWORD_RO
commands:
  prepare:
    description: "Prepare"
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init

  notify:
    description: "Notify Slack"
    steps:
      - slack/status:
          fail_only: true
          only_for_branches: 'master'

jobs:
  # Build the doc with MkDocs. This is just to test the build works. No artifact is published from
  # this job as Readthedocs.com performs this task itself when triggered by Github webhook.
  ## see https://readthedocs.com/dashboard/pegasys-teku/integrations/
  build:
    executor: python_executor
    steps:
      - prepare
      - restore_cache:
          keys:
            - deps-{{ checksum "./common/build_tools/requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r ./common/build_tools/requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: deps-{{ checksum "./common/build_tools/requirements.txt" }}
      - run:
          name: Run MkDocs
          command: |
            . venv/bin/activate
            mkdocs build -s
      - notify

  vale:
    executor: python_executor
    steps:
      - prepare
      - run:
          name: Install dependencies
          command: |
            curl -sfL https://install.goreleaser.com/github.com/ValeLint/vale.sh | sh -s v2.4.2
      - run:
          name: Run Vale
          command: |
            ./bin/vale --config ./common/build_tools/vale/.vale.ini --glob='*.{md}' . | tee ./vale.out
      - notify
      - store_artifacts:
          path: ./vale.out
          destination: ./vale.out

  linkchecker:
    executor: node_executor
    steps:
      - prepare
      - restore_cache:
          keys:
            - deps-{{ checksum "./common/build_tools/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm ci
      - run:
          name: Run markdown link checker
          command: |
            npm run test:links
      - notify
      - save_cache:
          paths:
            - ./node_modules
          key: deps-{{ checksum "./common/build_tools/package-lock.json" }}
      - store_artifacts:
          path: ./linkchecker.out
          destination: ./linkchecker.out

  markdownlint:
    executor: node_executor
    steps:
      - prepare
      - restore_cache:
          keys:
            - deps-{{ checksum "./common/build_tools/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm ci
      - run:
          shell: /bin/bash #this is a non breaking command so it will always return success
          name: Run Markdownlint info checks
          command: |
            npm run test:markdown:info
      - run:
          name: Run Markdownlint
          command: |
            npm run test:markdown
      - notify
      - save_cache:
          paths:
            - ./node_modules
          key: deps-{{ checksum "./common/build_tools/package-lock.json" }}
      - store_artifacts:
          path: ./markdownlint.out
          destination: ./markdownlint.out
      - store_artifacts:
          path: ./markdownlint_info.out
          destination: ./markdownlint_info.out

workflows:
  version: 2
  default:
    jobs:
      - build:
          context:
            - dockerhub-quorumengineering-ro
      - vale:
          context:
            - dockerhub-quorumengineering-ro
      - markdownlint:
          context:
            - dockerhub-quorumengineering-ro
      - linkchecker:
          context:
            - dockerhub-quorumengineering-ro
  nightly:
    triggers:
      - schedule: # GMT
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - linkchecker:
          context:
            - dockerhub-quorumengineering-ro
